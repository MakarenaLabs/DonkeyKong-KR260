#*****************************************************************************************
# Vivado (TM) v2022.1 (64-bit)
#
# project.tcl: Tcl script for re-creating project 'DonkeyKong-KR260'
#
# Generated by Vivado on Wed Jul 05 00:46:09 +0200 2023
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/enric/MAKARENALABS/Xilinx/RetroFusion/DonkeyKong-KR260/DonkeyKong-KR260.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../sources/split_buttons_pins.v"]"\
 "[file normalize "$origin_dir/../sources/pmod_audio.v"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_8_7/ram_8_7.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_7_3/ram_7_3.xci"]"\
 "[file normalize "$origin_dir/../sources/dkong_adec.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_bram.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_col_pal.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_dma.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_hv_count.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_logic.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_obj.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_sound.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_vram.v"]"\
 "[file normalize "$origin_dir/../sources/dkong_wav_sound.v"]"\
 "[file normalize "$origin_dir/../sources/dkongjr_iir_filter.v"]"\
 "[file normalize "$origin_dir/../sources/i8035ip.v"]"\
 "[file normalize "$origin_dir/../sources/radarscp_stars.v"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/LFSR.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/Log2highacc.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/astable_555_vco.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/dk_walk.sv"]"\
 "[file normalize "$origin_dir/../sources/dkong_soundboard.sv"]"\
 "[file normalize "$origin_dir/../sources/dkongjr_dac.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/invertor_square_wave_oscilator.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/natural_log.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/rate_of_change_limiter.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/resistive_two_way_mixer.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/resistor_capacitor_high_pass_filter.sv"]"\
 "[file normalize "$origin_dir/../sources/mister-discrete/resistor_capacitor_low_pass_filter.sv"]"\
 "[file normalize "$origin_dir/../sources/T80/T80_Pack.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80_ALU.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80_MCode.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80_Reg.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80pa.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/alu_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_tb_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/alu.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/alu-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/bus_mux.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/bus_mux-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/clock_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/clock_ctrl-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/cond_branch_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/cond_branch.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/cond_branch-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/db_bus.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/db_bus-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/dmem_ctrl_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/pmem_ctrl_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/decoder_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_comp_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/decoder.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/opc_decoder.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/opc_table.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/opc_table-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/opc_decoder-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/int.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/int-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/decoder-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/dmem_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/dmem_ctrl-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/p1.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/p1-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/p2.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/p2-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/pmem_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/pmem_ctrl-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/psw.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/psw-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_core.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/timer.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/timer-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_core-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/dkong_top.v"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8050_wb.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8048_notri.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8048.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8039_notri.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8039.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t49_rom-struct-a.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/wb_master.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-a.vhd"]"\
 "[file normalize "$origin_dir/../sources/system/t48_rom-struct-a.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/generic_ram_ena.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T16450.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/GBse.vhd"]"\
 "[file normalize "$origin_dir/../sources/hiscore.v"]"\
 "[file normalize "$origin_dir/../sources/pause.v"]"\
 "[file normalize "$origin_dir/../sources/pll.v"]"\
 "[file normalize "$origin_dir/../sources/pll/pll_0002.v"]"\
 "[file normalize "$origin_dir/../sources/T80/T8080se.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80a.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80as.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80s.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80se.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/T80sed.vhd"]"\
 "[file normalize "$origin_dir/../sources/T80/Z80.vhd"]"\
 "[file normalize "$origin_dir/../sources/dpram.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/generic_ram_ena.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/generic_ram_ena-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/generic_ram_ena-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/lpm_ram_dq.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/lpm_rom.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/syn_ram-e.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/syn_ram-e.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_core-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_core_comp_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/t48_core_comp_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_rom-e.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_rom-e.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-a.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_system_comp_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/system/t48_system_comp_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_system_comp_pack-p.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t49_rom-e.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t49_rom-e.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t49_rom-struct-a.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8039.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8039_notri.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8039_notri-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8039_notri-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8048.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8048_notri.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8048_notri-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8048_notri-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/wb_master.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/wb_master-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/wb_master-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8050_wb-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t49_rom-struct-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8039-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8048-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/t48/system/t8050_wb-c.vhd"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_9_7/ram_9_7.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_3_7/ram_3_7.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_7_5/ram_7_5.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_5_8/ram_5_8.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_7_7/ram_7_7.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_5_7/ram_5_7.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_10_7/ram_10_7.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/ram_11_7/ram_11_7.xci"]"\
 "[file normalize "$origin_dir/../sources/constraints/top.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "DonkeyKong-KR260"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xck26-sfvc784-2LV-c

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
#set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../../../../../AppData/Roaming/Xilinx/Vivado/2022.1/xhub/board_store/xilinx_board_store"] [file normalize "$origin_dir/../../../../kria-vitis-platforms/kr260/platforms/vivado/board_files/kr260_carrier/1.0"] [file normalize "$origin_dir/../../../../kria-vitis-platforms/kr260/platforms/vivado/board_files/kr260_som/1.0"]" -objects $obj
set_property -name "board_part" -value "xilinx.com:kr260_som:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "kr260_som" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "14" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "14" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "14" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "14" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "14" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "14" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/split_buttons_pins.v"]\
 [file normalize "$origin_dir/../sources/pmod_audio.v"]\
 [file normalize "$origin_dir/../sources/ip/ram_8_7/ram_8_7.xci" ]\
 [file normalize "$origin_dir/../sources/ip/ram_7_3/ram_7_3.xci" ]\
 [file normalize "$origin_dir/../sources/dkong_adec.v"]\
 [file normalize "$origin_dir/../sources/dkong_bram.v"]\
 [file normalize "$origin_dir/../sources/dkong_col_pal.v"]\
 [file normalize "$origin_dir/../sources/dkong_dma.v"]\
 [file normalize "$origin_dir/../sources/dkong_hv_count.v"]\
 [file normalize "$origin_dir/../sources/dkong_logic.v"]\
 [file normalize "$origin_dir/../sources/dkong_obj.v"]\
 [file normalize "$origin_dir/../sources/dkong_sound.v"]\
 [file normalize "$origin_dir/../sources/dkong_vram.v"]\
 [file normalize "$origin_dir/../sources/dkong_wav_sound.v"]\
 [file normalize "$origin_dir/../sources/dkongjr_iir_filter.v"]\
 [file normalize "$origin_dir/../sources/i8035ip.v"]\
 [file normalize "$origin_dir/../sources/radarscp_stars.v"]\
 [file normalize "$origin_dir/../sources/mister-discrete/LFSR.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/Log2highacc.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/astable_555_vco.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/dk_walk.sv"]\
 [file normalize "$origin_dir/../sources/dkong_soundboard.sv"]\
 [file normalize "$origin_dir/../sources/dkongjr_dac.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/invertor_square_wave_oscilator.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/natural_log.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/rate_of_change_limiter.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/resistive_two_way_mixer.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/resistor_capacitor_high_pass_filter.sv"]\
 [file normalize "$origin_dir/../sources/mister-discrete/resistor_capacitor_low_pass_filter.sv"]\
 [file normalize "$origin_dir/../sources/T80/T80_Pack.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80_ALU.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80_MCode.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80_Reg.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80pa.vhd"]\
 [file normalize "$origin_dir/../sources/t48/t48_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/alu_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/t48_tb_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/alu.vhd"]\
 [file normalize "$origin_dir/../sources/t48/alu-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/bus_mux.vhd"]\
 [file normalize "$origin_dir/../sources/t48/bus_mux-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/clock_ctrl.vhd"]\
 [file normalize "$origin_dir/../sources/t48/clock_ctrl-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/cond_branch_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/cond_branch.vhd"]\
 [file normalize "$origin_dir/../sources/t48/cond_branch-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/db_bus.vhd"]\
 [file normalize "$origin_dir/../sources/t48/db_bus-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/dmem_ctrl_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/pmem_ctrl_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/decoder_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/t48_comp_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/decoder.vhd"]\
 [file normalize "$origin_dir/../sources/t48/opc_decoder.vhd"]\
 [file normalize "$origin_dir/../sources/t48/opc_table.vhd"]\
 [file normalize "$origin_dir/../sources/t48/opc_table-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/opc_decoder-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/int.vhd"]\
 [file normalize "$origin_dir/../sources/t48/int-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/decoder-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/dmem_ctrl.vhd"]\
 [file normalize "$origin_dir/../sources/t48/dmem_ctrl-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/p1.vhd"]\
 [file normalize "$origin_dir/../sources/t48/p1-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/p2.vhd"]\
 [file normalize "$origin_dir/../sources/t48/p2-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/pmem_ctrl.vhd"]\
 [file normalize "$origin_dir/../sources/t48/pmem_ctrl-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/psw.vhd"]\
 [file normalize "$origin_dir/../sources/t48/psw-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/t48_core.vhd"]\
 [file normalize "$origin_dir/../sources/t48/timer.vhd"]\
 [file normalize "$origin_dir/../sources/t48/timer-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/t48_core-c.vhd"]\
 [file normalize "$origin_dir/../sources/dkong_top.v"]\
 [file normalize "$origin_dir/../sources/t48/system/t8050_wb.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8048_notri.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8048.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8039_notri.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8039.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t49_rom-struct-a.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/wb_master.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-a.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/generic_ram_ena.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T16450.vhd"]\
 [file normalize "$origin_dir/../sources/T80/GBse.vhd"]\
 [file normalize "$origin_dir/../sources/hiscore.v"]\
 [file normalize "$origin_dir/../sources/pause.v"]\
 [file normalize "$origin_dir/../sources/pll.v"]\
 [file normalize "$origin_dir/../sources/pll/pll_0002.v"]\
 [file normalize "$origin_dir/../sources/T80/T8080se.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80a.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80as.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80s.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80se.vhd"]\
 [file normalize "$origin_dir/../sources/T80/T80sed.vhd"]\
 [file normalize "$origin_dir/../sources/T80/Z80.vhd"]\
 [file normalize "$origin_dir/../sources/dpram.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/generic_ram_ena.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/generic_ram_ena-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/lpm_ram_dq.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/lpm_rom.vhd"]\
 [file normalize "$origin_dir/../sources/t48/syn_ram-e.vhd"]\
 [file normalize "$origin_dir/../sources/t48/t48_core-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/t48_core_comp_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t48_rom-e.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-a.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t48_system_comp_pack-p.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t49_rom-e.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t49_rom-struct-a.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8039.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8039_notri.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8039_notri-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8048.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8048_notri.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8048_notri-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/wb_master.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/wb_master-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8050_wb-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t48_rom-struct-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8039-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8048-c.vhd"]\
 [file normalize "$origin_dir/../sources/t48/system/t8050_wb-c.vhd"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_8_7/ram_8_7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "ram_7_3/ram_7_3.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "mister-discrete/LFSR.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/Log2highacc.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/astable_555_vco.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/dk_walk.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "dkong_soundboard.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "dkongjr_dac.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/invertor_square_wave_oscilator.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/natural_log.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/rate_of_change_limiter.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/resistive_two_way_mixer.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/resistor_capacitor_high_pass_filter.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mister-discrete/resistor_capacitor_low_pass_filter.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "T80/T80_Pack.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80_Pack.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80_ALU.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80_MCode.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80_Reg.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80pa.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/alu_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/alu_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_tb_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_tb_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/alu.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/alu.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/alu-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/alu-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/bus_mux.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/bus_mux.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/bus_mux-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/bus_mux-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/clock_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/clock_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/clock_ctrl-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/clock_ctrl-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/cond_branch_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/cond_branch_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/cond_branch.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/cond_branch.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/cond_branch-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/cond_branch-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/db_bus.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/db_bus.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/db_bus-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/db_bus-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/dmem_ctrl_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/dmem_ctrl_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/pmem_ctrl_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/pmem_ctrl_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/decoder_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/decoder_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_comp_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_comp_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/decoder.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/decoder.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_decoder.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_decoder.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_table.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_table.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_table-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_table-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_decoder-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/opc_decoder-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/int.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/int.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/int-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/int-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/decoder-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/decoder-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/dmem_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/dmem_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/dmem_ctrl-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/dmem_ctrl-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p1.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p1.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p1-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p1-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p2.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p2.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p2-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/p2-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/pmem_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/pmem_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/pmem_ctrl-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/pmem_ctrl-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/psw.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/psw.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/psw-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/psw-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_core.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_core.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/timer.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/timer.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/timer-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/timer-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_core-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8050_wb.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048_notri.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039_notri.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t49_rom-struct-a.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/wb_master.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-struct-a.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-struct-a.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/generic_ram_ena.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T16450.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/GBse.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T8080se.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80a.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80as.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80s.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80se.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/T80sed.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T80/Z80.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "dpram.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/generic_ram_ena.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/generic_ram_ena-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/generic_ram_ena-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/generic_ram_ena-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/lpm_ram_dq.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/lpm_rom.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/syn_ram-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/syn_ram-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_core-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_core_comp_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "t48/t48_core_comp_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-struct-a.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-struct-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_system_comp_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_system_comp_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_system_comp_pack-p.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t49_rom-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t49_rom-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t49_rom-e.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t49_rom-struct-a.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039_notri.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039_notri-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039_notri-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039_notri-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048_notri.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048_notri-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048_notri-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048_notri-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/wb_master.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8050_wb.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/wb_master-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/wb_master-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/wb_master-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8050_wb-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-struct-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

#set file "system/t49_rom-struct-c.vhd"
#set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8050_wb-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t48_rom-struct-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

#set file "system/t49_rom-struct-c.vhd"
#set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8039-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8048-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "system/t8050_wb-c.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_9_7/ram_9_7.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_9_7/ram_9_7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_3_7/ram_3_7.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_3_7/ram_3_7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_7_5/ram_7_5.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_7_5/ram_7_5.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_5_8/ram_5_8.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_5_8/ram_5_8.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_7_7/ram_7_7.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_7_7/ram_7_7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_5_7/ram_5_7.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_5_7/ram_5_7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_10_7/ram_10_7.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_10_7/ram_10_7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/ip/ram_11_7/ram_11_7.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "ram_11_7/ram_11_7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../../DonkeyKong-KR260.srcs/constrs_1/imports/constraints/top.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constraints/top.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "dkong_top" -objects $obj
set_property -name "top_file" -value "$origin_dir/../sources/dkong_top.v" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj



# Adding sources referenced in BDs, if not already added
if { [get_files split_buttons_pins.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/split_buttons_pins.v
}
if { [get_files pmod_audio.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pmod_audio.v
}
if { [get_files ram_5_7.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_5_7/ram_5_7.xci
}
if { [get_files ram_10_7.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_10_7/ram_10_7.xci
}
if { [get_files ram_11_7.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_11_7/ram_11_7.xci
}
if { [get_files ram_9_7.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_9_7/ram_9_7.xci
}
if { [get_files ram_5_8.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_5_8/ram_5_8.xci
}
if { [get_files ram_7_5.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_7_5/ram_7_5.xci
}
if { [get_files ram_8_7.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_8_7/ram_8_7.xci
}
if { [get_files ram_7_3.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/ip/ram_7_3/ram_7_3.xci
}
if { [get_files dkong_adec.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_adec.v
}
if { [get_files dkong_bram.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_bram.v
}
if { [get_files dkong_col_pal.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_col_pal.v
}
if { [get_files dkong_dma.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_dma.v
}
if { [get_files dkong_hv_count.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_hv_count.v
}
if { [get_files dkong_logic.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_logic.v
}
if { [get_files dkong_obj.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_obj.v
}
if { [get_files dkong_sound.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_sound.v
}
if { [get_files dkong_vram.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_vram.v
}
if { [get_files dkong_wav_sound.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_wav_sound.v
}
if { [get_files dkongjr_iir_filter.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkongjr_iir_filter.v
}
if { [get_files i8035ip.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/i8035ip.v
}
if { [get_files radarscp_stars.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/radarscp_stars.v
}
if { [get_files LFSR.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/LFSR.sv
}
if { [get_files Log2highacc.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/Log2highacc.sv
}
if { [get_files astable_555_vco.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/astable_555_vco.sv
}
if { [get_files dk_walk.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/dk_walk.sv
}
if { [get_files dkong_soundboard.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_soundboard.sv
}
if { [get_files dkongjr_dac.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkongjr_dac.sv
}
if { [get_files invertor_square_wave_oscilator.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/invertor_square_wave_oscilator.sv
}
if { [get_files natural_log.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/natural_log.sv
}
if { [get_files rate_of_change_limiter.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/rate_of_change_limiter.sv
}
if { [get_files resistive_two_way_mixer.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/resistive_two_way_mixer.sv
}
if { [get_files resistor_capacitor_high_pass_filter.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/resistor_capacitor_high_pass_filter.sv
}
if { [get_files resistor_capacitor_low_pass_filter.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/mister-discrete/resistor_capacitor_low_pass_filter.sv
}
if { [get_files T80_Pack.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80/T80_Pack.vhd
}
if { [get_files T80_Pack.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80/T80_Pack.vhd
}
if { [get_files T80_Pack.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80_Pack.vhd
}
if { [get_files T80.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80/T80.vhd
}
if { [get_files T80_ALU.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80/T80_ALU.vhd
}
if { [get_files T80_MCode.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80/T80_MCode.vhd
}
if { [get_files T80_Reg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80/T80_Reg.vhd
}
if { [get_files T80pa.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T80/T80pa.vhd
}
if { [get_files t48_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_pack-p.vhd
}
if { [get_files t48_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_pack-p.vhd
}
if { [get_files alu_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/alu_pack-p.vhd
}
if { [get_files alu_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/alu_pack-p.vhd
}
if { [get_files t48_tb_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_tb_pack-p.vhd
}
if { [get_files t48_tb_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_tb_pack-p.vhd
}
if { [get_files alu.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/alu.vhd
}
if { [get_files alu.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/alu.vhd
}
if { [get_files alu-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/alu-c.vhd
}
if { [get_files alu-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/alu-c.vhd
}
if { [get_files bus_mux.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/bus_mux.vhd
}
if { [get_files bus_mux.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/bus_mux.vhd
}
if { [get_files bus_mux-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/bus_mux-c.vhd
}
if { [get_files bus_mux-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/bus_mux-c.vhd
}
if { [get_files clock_ctrl.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/clock_ctrl.vhd
}
if { [get_files clock_ctrl.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/clock_ctrl.vhd
}
if { [get_files clock_ctrl-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/clock_ctrl-c.vhd
}
if { [get_files clock_ctrl-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/clock_ctrl-c.vhd
}
if { [get_files cond_branch_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/cond_branch_pack-p.vhd
}
if { [get_files cond_branch_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/cond_branch_pack-p.vhd
}
if { [get_files cond_branch.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/cond_branch.vhd
}
if { [get_files cond_branch.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/cond_branch.vhd
}
if { [get_files cond_branch-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/cond_branch-c.vhd
}
if { [get_files cond_branch-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/cond_branch-c.vhd
}
if { [get_files db_bus.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/db_bus.vhd
}
if { [get_files db_bus.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/db_bus.vhd
}
if { [get_files db_bus-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/db_bus-c.vhd
}
if { [get_files db_bus-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/db_bus-c.vhd
}
if { [get_files dmem_ctrl_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/dmem_ctrl_pack-p.vhd
}
if { [get_files dmem_ctrl_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/dmem_ctrl_pack-p.vhd
}
if { [get_files pmem_ctrl_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/pmem_ctrl_pack-p.vhd
}
if { [get_files pmem_ctrl_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/pmem_ctrl_pack-p.vhd
}
if { [get_files decoder_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/decoder_pack-p.vhd
}
if { [get_files decoder_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/decoder_pack-p.vhd
}
if { [get_files t48_comp_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_comp_pack-p.vhd
}
if { [get_files t48_comp_pack-p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_comp_pack-p.vhd
}
if { [get_files decoder.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/decoder.vhd
}
if { [get_files decoder.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/decoder.vhd
}
if { [get_files opc_decoder.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_decoder.vhd
}
if { [get_files opc_decoder.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_decoder.vhd
}
if { [get_files opc_table.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_table.vhd
}
if { [get_files opc_table.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_table.vhd
}
if { [get_files opc_table-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_table-c.vhd
}
if { [get_files opc_table-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_table-c.vhd
}
if { [get_files opc_decoder-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_decoder-c.vhd
}
if { [get_files opc_decoder-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/opc_decoder-c.vhd
}
if { [get_files int.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/int.vhd
}
if { [get_files int.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/int.vhd
}
if { [get_files int-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/int-c.vhd
}
if { [get_files int-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/int-c.vhd
}
if { [get_files decoder-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/decoder-c.vhd
}
if { [get_files decoder-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/decoder-c.vhd
}
if { [get_files dmem_ctrl.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/dmem_ctrl.vhd
}
if { [get_files dmem_ctrl.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/dmem_ctrl.vhd
}
if { [get_files dmem_ctrl-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/dmem_ctrl-c.vhd
}
if { [get_files dmem_ctrl-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/dmem_ctrl-c.vhd
}
if { [get_files p1.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p1.vhd
}
if { [get_files p1.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p1.vhd
}
if { [get_files p1-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p1-c.vhd
}
if { [get_files p1-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p1-c.vhd
}
if { [get_files p2.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p2.vhd
}
if { [get_files p2.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p2.vhd
}
if { [get_files p2-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p2-c.vhd
}
if { [get_files p2-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/p2-c.vhd
}
if { [get_files pmem_ctrl.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/pmem_ctrl.vhd
}
if { [get_files pmem_ctrl.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/pmem_ctrl.vhd
}
if { [get_files pmem_ctrl-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/pmem_ctrl-c.vhd
}
if { [get_files pmem_ctrl-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/pmem_ctrl-c.vhd
}
if { [get_files psw.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/psw.vhd
}
if { [get_files psw.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/psw.vhd
}
if { [get_files psw-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/psw-c.vhd
}
if { [get_files psw-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/psw-c.vhd
}
if { [get_files t48_core.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_core.vhd
}
if { [get_files t48_core.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_core.vhd
}
if { [get_files timer.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/timer.vhd
}
if { [get_files timer.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/timer.vhd
}
if { [get_files timer-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/timer-c.vhd
}
if { [get_files timer-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/timer-c.vhd
}
if { [get_files t48_core-c.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/t48/t48_core-c.vhd
}
if { [get_files dkong_top.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dkong_top.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# dkong_top, pmod_audio, split_buttons_pins



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  dkong_top\
  pmod_audio\
  split_buttons_pins\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set AUDIO_LEFT [ create_bd_port -dir O AUDIO_LEFT ]
  set AUDIO_RIGHT [ create_bd_port -dir O AUDIO_RIGHT ]
  set BLUE [ create_bd_port -dir O -from 3 -to 0 BLUE ]
  set BUTTONS [ create_bd_port -dir I -from 7 -to 0 BUTTONS ]
  set CLK_IN_gem [ create_bd_port -dir I -type clk -freq_hz 25000000 CLK_IN_gem ]
  set GREEN [ create_bd_port -dir O -from 3 -to 0 GREEN ]
  set HSYNC [ create_bd_port -dir O HSYNC ]
  set RED [ create_bd_port -dir O -from 3 -to 0 RED ]
  set RESET [ create_bd_port -dir I RESET ]
  set VSYNC [ create_bd_port -dir O VSYNC ]

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {400.0} \
   CONFIG.CLKOUT1_JITTER {245.269} \
   CONFIG.CLKOUT1_PHASE_ERROR {261.231} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {24.000} \
   CONFIG.CLKOUT2_JITTER {189.202} \
   CONFIG.CLKOUT2_PHASE_ERROR {261.231} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {49.000} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {117.625} \
   CONFIG.MMCM_CLKIN1_PERIOD {40.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {61.250} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {30} \
   CONFIG.MMCM_DIVCLK_DIVIDE {2} \
   CONFIG.NUM_OUT_CLKS {2} \
   CONFIG.PRIM_IN_FREQ {25.000} \
   CONFIG.USE_LOCKED {false} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: dkong_top_0, and set properties
  set block_name dkong_top
  set block_cell_name dkong_top_0
  if { [catch {set dkong_top_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dkong_top_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmod_audio_0, and set properties
  set block_name pmod_audio
  set block_cell_name pmod_audio_0
  if { [catch {set pmod_audio_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmod_audio_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: split_buttons_pins_0, and set properties
  set block_name split_buttons_pins
  set block_cell_name split_buttons_pins_0
  if { [catch {set split_buttons_pins_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $split_buttons_pins_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create port connections
  connect_bd_net -net BUTTONS_1 [get_bd_ports BUTTONS] [get_bd_pins split_buttons_pins_0/buttons]
  connect_bd_net -net CLK_IN_gem_1 [get_bd_ports CLK_IN_gem] [get_bd_pins clk_wiz_0/clk_in1]
  connect_bd_net -net RESET_1 [get_bd_ports RESET] [get_bd_pins dkong_top_0/I_RESETn]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins dkong_top_0/I_CLK_24M] [get_bd_pins pmod_audio_0/clk]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins clk_wiz_0/clk_out2] [get_bd_pins dkong_top_0/I_CLK_24576M]
  connect_bd_net -net dkong_top_0_O_SOUND_DAT [get_bd_pins dkong_top_0/O_SOUND_DAT] [get_bd_pins pmod_audio_0/sample]
  connect_bd_net -net dkong_top_0_O_VGA_B [get_bd_ports BLUE] [get_bd_pins dkong_top_0/O_VGA_B]
  connect_bd_net -net dkong_top_0_O_VGA_G [get_bd_ports GREEN] [get_bd_pins dkong_top_0/O_VGA_G]
  connect_bd_net -net dkong_top_0_O_VGA_H_SYNCn [get_bd_ports HSYNC] [get_bd_pins dkong_top_0/O_VGA_H_SYNCn]
  connect_bd_net -net dkong_top_0_O_VGA_R [get_bd_ports RED] [get_bd_pins dkong_top_0/O_VGA_R]
  connect_bd_net -net dkong_top_0_O_VGA_V_SYNCn [get_bd_ports VSYNC] [get_bd_pins dkong_top_0/O_VGA_V_SYNCn]
  connect_bd_net -net pmod_audio_0_output_pmod [get_bd_ports AUDIO_LEFT] [get_bd_pins pmod_audio_0/output_pmod]
  connect_bd_net -net pmod_audio_0_output_pmod2 [get_bd_ports AUDIO_RIGHT] [get_bd_pins pmod_audio_0/output_pmod2]
  connect_bd_net -net split_buttons_pins_0_button0 [get_bd_pins dkong_top_0/I_J1] [get_bd_pins split_buttons_pins_0/button0]
  connect_bd_net -net split_buttons_pins_0_button2 [get_bd_pins dkong_top_0/I_S1] [get_bd_pins split_buttons_pins_0/button2]
  connect_bd_net -net split_buttons_pins_0_button3 [get_bd_pins dkong_top_0/I_C1] [get_bd_pins split_buttons_pins_0/button3]
  connect_bd_net -net split_buttons_pins_0_button4 [get_bd_pins dkong_top_0/I_L1] [get_bd_pins split_buttons_pins_0/button4]
  connect_bd_net -net split_buttons_pins_0_button5 [get_bd_pins dkong_top_0/I_R1] [get_bd_pins split_buttons_pins_0/button5]
  connect_bd_net -net split_buttons_pins_0_button6 [get_bd_pins dkong_top_0/I_U1] [get_bd_pins split_buttons_pins_0/button6]
  connect_bd_net -net split_buttons_pins_0_button7 [get_bd_pins dkong_top_0/I_D1] [get_bd_pins split_buttons_pins_0/button7]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.586047",
   "Default View_TopLeft":"-558,0",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port port-id_HSYNC -pg 1 -lvl 4 -x 970 -y 460 -defaultsOSRD
preplace port port-id_VSYNC -pg 1 -lvl 4 -x 970 -y 480 -defaultsOSRD
preplace port port-id_CLK_IN_gem -pg 1 -lvl 0 -x 0 -y 90 -defaultsOSRD
preplace port port-id_RESET -pg 1 -lvl 0 -x 0 -y 160 -defaultsOSRD
preplace port port-id_AUDIO_LEFT -pg 1 -lvl 4 -x 970 -y 60 -defaultsOSRD
preplace port port-id_AUDIO_RIGHT -pg 1 -lvl 4 -x 970 -y 80 -defaultsOSRD
preplace portBus BUTTONS -pg 1 -lvl 0 -x 0 -y 330 -defaultsOSRD
preplace portBus RED -pg 1 -lvl 4 -x 970 -y 360 -defaultsOSRD
preplace portBus GREEN -pg 1 -lvl 4 -x 970 -y 380 -defaultsOSRD
preplace portBus BLUE -pg 1 -lvl 4 -x 970 -y 400 -defaultsOSRD
preplace inst split_buttons_pins_0 -pg 1 -lvl 1 -x 140 -y 330 -defaultsOSRD
preplace inst pmod_audio_0 -pg 1 -lvl 3 -x 810 -y 70 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 1 -x 140 -y 90 -defaultsOSRD
preplace inst dkong_top_0 -pg 1 -lvl 2 -x 490 -y 460 -defaultsOSRD
preplace netloc BUTTONS_1 1 0 1 NJ 330
preplace netloc CLK_IN_gem_1 1 0 1 NJ 90
preplace netloc RESET_1 1 0 2 NJ 160 NJ
preplace netloc clk_wiz_0_clk_out1 1 1 2 270 60 NJ
preplace netloc clk_wiz_0_clk_out2 1 1 1 260 100n
preplace netloc dkong_top_0_O_SOUND_DAT 1 2 1 670 80n
preplace netloc dkong_top_0_O_VGA_B 1 2 2 NJ 400 NJ
preplace netloc dkong_top_0_O_VGA_G 1 2 2 NJ 380 NJ
preplace netloc dkong_top_0_O_VGA_H_SYNCn 1 2 2 NJ 460 NJ
preplace netloc dkong_top_0_O_VGA_R 1 2 2 NJ 360 NJ
preplace netloc dkong_top_0_O_VGA_V_SYNCn 1 2 2 NJ 480 NJ
preplace netloc pmod_audio_0_output_pmod 1 3 1 NJ 60
preplace netloc pmod_audio_0_output_pmod2 1 3 1 NJ 80
preplace netloc split_buttons_pins_0_button0 1 1 1 N 260
preplace netloc split_buttons_pins_0_button2 1 1 1 280 300n
preplace netloc split_buttons_pins_0_button3 1 1 1 270 320n
preplace netloc split_buttons_pins_0_button4 1 1 1 290 220n
preplace netloc split_buttons_pins_0_button5 1 1 1 310 240n
preplace netloc split_buttons_pins_0_button6 1 1 1 260 180n
preplace netloc split_buttons_pins_0_button7 1 1 1 300 200n
levelinfo -pg 1 0 140 490 810 970
pagesize -pg 1 -db -bbox -sgen -150 0 1120 860
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse design_1.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../../DonkeyKong-KR260.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

#call make_wrapper to create wrapper files

set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
add_files -norecurse -fileset sources_1 $wrapper_path
